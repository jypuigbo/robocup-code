#! /usr/bin/env python
#*  All rights reserved.
#*
#*  Redistribution and use in source and binary forms, with or without
#*  modification, are permitted provided that the following conditions
#*  are met:
#*
#*   * Redistributions of source code must retain the above copyright
#*     notice, this list of conditions and the following disclaimer.
#*   * Redistributions in binary form must reproduce the above
#*     copyright notice, this list of conditions and the following
#*     disclaimer in the documentation and/or other materials provided
#*     with the distribution.
#*   * Neither the name of the Willow Garage nor the names of its
#*     contributors may be used to endorse or promote products derived
#*     from this software without specific prior written permission.
#*
#*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#*  POSSIBILITY OF SUCH DAMAGE.
#***********************************************************

# Author: 

PACKAGE='iri_door_detector'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

#       Name                    			Type            Reconfiguration level   	Description                     			Default         Min     Max
gen.add("base_distance_before_closed_door",		double_t,		0,			"Required distance to avoid collision with a closed door",		0.36,		0.1,	3.0)
gen.add("base_distance_after_open_door",		double_t,		0,			"Required distance to avoid collision with an open door",		1.0,		0.1,	3.0)
gen.add("arm_distance_before_closed_door",		double_t,		0,			"Required distance to avoid collision with a closed door",		0.25,		0.01,	1.0)
gen.add("z_arm_offset",					double_t,		0,			"Z-axis Arm offset to adjust target pose",		0.04,		-1.0,	1.0)
gen.add("y_offset",					double_t,		0,			"Y-axis offset to adjust target pose",		0.0,		-1.0,	1.0)
gen.add("no_simulator",		bool_t,			0,		"Run without simulation",	True)

exit(gen.generate(PACKAGE, "DoorDetectorActionsAlgorithm", "DoorDetectorActions"))
