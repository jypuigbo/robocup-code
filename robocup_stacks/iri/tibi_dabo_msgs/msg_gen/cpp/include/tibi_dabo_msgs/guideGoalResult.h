/* Auto-generated by genmsg_cpp for file /home/sampfeiffer/branches_svn/migration/ROBOCUP_STACKS_INTEGRATION/stacks/robocup_stacks/iri/tibi_dabo_msgs/msg/guideGoalResult.msg */
#ifndef TIBI_DABO_MSGS_MESSAGE_GUIDEGOALRESULT_H
#define TIBI_DABO_MSGS_MESSAGE_GUIDEGOALRESULT_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"


namespace tibi_dabo_msgs
{
template <class ContainerAllocator>
struct guideGoalResult_ {
  typedef guideGoalResult_<ContainerAllocator> Type;

  guideGoalResult_()
  : result_code(0)
  , result_type()
  {
  }

  guideGoalResult_(const ContainerAllocator& _alloc)
  : result_code(0)
  , result_type(_alloc)
  {
  }

  typedef int32_t _result_code_type;
  int32_t result_code;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _result_type_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  result_type;


  typedef boost::shared_ptr< ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct guideGoalResult
typedef  ::tibi_dabo_msgs::guideGoalResult_<std::allocator<void> > guideGoalResult;

typedef boost::shared_ptr< ::tibi_dabo_msgs::guideGoalResult> guideGoalResultPtr;
typedef boost::shared_ptr< ::tibi_dabo_msgs::guideGoalResult const> guideGoalResultConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace tibi_dabo_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "2454c0379328f65ed8da186dfdff41ca";
  }

  static const char* value(const  ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x2454c0379328f65eULL;
  static const uint64_t static_value2 = 0xd8da186dfdff41caULL;
};

template<class ContainerAllocator>
struct DataType< ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "tibi_dabo_msgs/guideGoalResult";
  }

  static const char* value(const  ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
#result definition\n\
int32    result_code\n\
string   result_type\n\
\n\
";
  }

  static const char* value(const  ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result_code);
    stream.next(m.result_type);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct guideGoalResult_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::tibi_dabo_msgs::guideGoalResult_<ContainerAllocator> & v) 
  {
    s << indent << "result_code: ";
    Printer<int32_t>::stream(s, indent + "  ", v.result_code);
    s << indent << "result_type: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.result_type);
  }
};


} // namespace message_operations
} // namespace ros

#endif // TIBI_DABO_MSGS_MESSAGE_GUIDEGOALRESULT_H

