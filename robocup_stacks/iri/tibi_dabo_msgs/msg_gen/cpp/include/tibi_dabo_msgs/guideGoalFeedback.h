/* Auto-generated by genmsg_cpp for file /home/sampfeiffer/branches_svn/migration/ROBOCUP_STACKS_INTEGRATION/stacks/robocup_stacks/iri/tibi_dabo_msgs/msg/guideGoalFeedback.msg */
#ifndef TIBI_DABO_MSGS_MESSAGE_GUIDEGOALFEEDBACK_H
#define TIBI_DABO_MSGS_MESSAGE_GUIDEGOALFEEDBACK_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"


namespace tibi_dabo_msgs
{
template <class ContainerAllocator>
struct guideGoalFeedback_ {
  typedef guideGoalFeedback_<ContainerAllocator> Type;

  guideGoalFeedback_()
  : distance(0.0)
  {
  }

  guideGoalFeedback_(const ContainerAllocator& _alloc)
  : distance(0.0)
  {
  }

  typedef float _distance_type;
  float distance;


  typedef boost::shared_ptr< ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct guideGoalFeedback
typedef  ::tibi_dabo_msgs::guideGoalFeedback_<std::allocator<void> > guideGoalFeedback;

typedef boost::shared_ptr< ::tibi_dabo_msgs::guideGoalFeedback> guideGoalFeedbackPtr;
typedef boost::shared_ptr< ::tibi_dabo_msgs::guideGoalFeedback const> guideGoalFeedbackConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace tibi_dabo_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6e77fb10f0c8b4833ec273aa9ac74459";
  }

  static const char* value(const  ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x6e77fb10f0c8b483ULL;
  static const uint64_t static_value2 = 0x3ec273aa9ac74459ULL;
};

template<class ContainerAllocator>
struct DataType< ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator> > {
  static const char* value() 
  {
    return "tibi_dabo_msgs/guideGoalFeedback";
  }

  static const char* value(const  ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator> > {
  static const char* value() 
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
#feedback\n\
float32 distance\n\
\n\
\n\
\n\
";
  }

  static const char* value(const  ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.distance);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct guideGoalFeedback_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::tibi_dabo_msgs::guideGoalFeedback_<ContainerAllocator> & v) 
  {
    s << indent << "distance: ";
    Printer<float>::stream(s, indent + "  ", v.distance);
  }
};


} // namespace message_operations
} // namespace ros

#endif // TIBI_DABO_MSGS_MESSAGE_GUIDEGOALFEEDBACK_H

