/* Auto-generated by genmsg_cpp for file /home/sampfeiffer/branches_svn/migration/ROBOCUP_STACKS_INTEGRATION/stacks/robocup_stacks/iri/iri_wam_common_msgs/srv/wamaction.srv */
#ifndef IRI_WAM_COMMON_MSGS_SERVICE_WAMACTION_H
#define IRI_WAM_COMMON_MSGS_SERVICE_WAMACTION_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace iri_wam_common_msgs
{
template <class ContainerAllocator>
struct wamactionRequest_ {
  typedef wamactionRequest_<ContainerAllocator> Type;

  wamactionRequest_()
  : action(0)
  , hand(0)
  , zone(0)
  {
  }

  wamactionRequest_(const ContainerAllocator& _alloc)
  : action(0)
  , hand(0)
  , zone(0)
  {
  }

  typedef int32_t _action_type;
  int32_t action;

  typedef int32_t _hand_type;
  int32_t hand;

  typedef int32_t _zone_type;
  int32_t zone;


  typedef boost::shared_ptr< ::iri_wam_common_msgs::wamactionRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::iri_wam_common_msgs::wamactionRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct wamactionRequest
typedef  ::iri_wam_common_msgs::wamactionRequest_<std::allocator<void> > wamactionRequest;

typedef boost::shared_ptr< ::iri_wam_common_msgs::wamactionRequest> wamactionRequestPtr;
typedef boost::shared_ptr< ::iri_wam_common_msgs::wamactionRequest const> wamactionRequestConstPtr;


template <class ContainerAllocator>
struct wamactionResponse_ {
  typedef wamactionResponse_<ContainerAllocator> Type;

  wamactionResponse_()
  : success(0)
  {
  }

  wamactionResponse_(const ContainerAllocator& _alloc)
  : success(0)
  {
  }

  typedef int8_t _success_type;
  int8_t success;


  typedef boost::shared_ptr< ::iri_wam_common_msgs::wamactionResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::iri_wam_common_msgs::wamactionResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct wamactionResponse
typedef  ::iri_wam_common_msgs::wamactionResponse_<std::allocator<void> > wamactionResponse;

typedef boost::shared_ptr< ::iri_wam_common_msgs::wamactionResponse> wamactionResponsePtr;
typedef boost::shared_ptr< ::iri_wam_common_msgs::wamactionResponse const> wamactionResponseConstPtr;

struct wamaction
{

typedef wamactionRequest Request;
typedef wamactionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct wamaction
} // namespace iri_wam_common_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::wamactionRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::wamactionRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::iri_wam_common_msgs::wamactionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f254fce80a6e6ee76c05f4680f115676";
  }

  static const char* value(const  ::iri_wam_common_msgs::wamactionRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xf254fce80a6e6ee7ULL;
  static const uint64_t static_value2 = 0x6c05f4680f115676ULL;
};

template<class ContainerAllocator>
struct DataType< ::iri_wam_common_msgs::wamactionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/wamactionRequest";
  }

  static const char* value(const  ::iri_wam_common_msgs::wamactionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::iri_wam_common_msgs::wamactionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 action\n\
int32 hand\n\
int32 zone\n\
\n\
";
  }

  static const char* value(const  ::iri_wam_common_msgs::wamactionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::iri_wam_common_msgs::wamactionRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::wamactionResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::wamactionResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::iri_wam_common_msgs::wamactionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "0b13460cb14006d3852674b4c614f25f";
  }

  static const char* value(const  ::iri_wam_common_msgs::wamactionResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x0b13460cb14006d3ULL;
  static const uint64_t static_value2 = 0x852674b4c614f25fULL;
};

template<class ContainerAllocator>
struct DataType< ::iri_wam_common_msgs::wamactionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/wamactionResponse";
  }

  static const char* value(const  ::iri_wam_common_msgs::wamactionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::iri_wam_common_msgs::wamactionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int8 success\n\
\n\
\n\
";
  }

  static const char* value(const  ::iri_wam_common_msgs::wamactionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::iri_wam_common_msgs::wamactionResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::iri_wam_common_msgs::wamactionRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.action);
    stream.next(m.hand);
    stream.next(m.zone);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct wamactionRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::iri_wam_common_msgs::wamactionResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct wamactionResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<iri_wam_common_msgs::wamaction> {
  static const char* value() 
  {
    return "8691f58a29d2fae97626e408082c84d8";
  }

  static const char* value(const iri_wam_common_msgs::wamaction&) { return value(); } 
};

template<>
struct DataType<iri_wam_common_msgs::wamaction> {
  static const char* value() 
  {
    return "iri_wam_common_msgs/wamaction";
  }

  static const char* value(const iri_wam_common_msgs::wamaction&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<iri_wam_common_msgs::wamactionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "8691f58a29d2fae97626e408082c84d8";
  }

  static const char* value(const iri_wam_common_msgs::wamactionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<iri_wam_common_msgs::wamactionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/wamaction";
  }

  static const char* value(const iri_wam_common_msgs::wamactionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<iri_wam_common_msgs::wamactionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "8691f58a29d2fae97626e408082c84d8";
  }

  static const char* value(const iri_wam_common_msgs::wamactionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<iri_wam_common_msgs::wamactionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/wamaction";
  }

  static const char* value(const iri_wam_common_msgs::wamactionResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // IRI_WAM_COMMON_MSGS_SERVICE_WAMACTION_H

