/* Auto-generated by genmsg_cpp for file /home/sampfeiffer/branches_svn/migration/ROBOCUP_STACKS_INTEGRATION/stacks/robocup_stacks/iri/iri_wam_common_msgs/srv/compute_obj_grasp_pose.srv */
#ifndef IRI_WAM_COMMON_MSGS_SERVICE_COMPUTE_OBJ_GRASP_POSE_H
#define IRI_WAM_COMMON_MSGS_SERVICE_COMPUTE_OBJ_GRASP_POSE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"



#include "geometry_msgs/PoseStamped.h"

namespace iri_wam_common_msgs
{
template <class ContainerAllocator>
struct compute_obj_grasp_poseRequest_ {
  typedef compute_obj_grasp_poseRequest_<ContainerAllocator> Type;

  compute_obj_grasp_poseRequest_()
  : filterID(0)
  {
  }

  compute_obj_grasp_poseRequest_(const ContainerAllocator& _alloc)
  : filterID(0)
  {
  }

  typedef int32_t _filterID_type;
  int32_t filterID;


  typedef boost::shared_ptr< ::iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct compute_obj_grasp_poseRequest
typedef  ::iri_wam_common_msgs::compute_obj_grasp_poseRequest_<std::allocator<void> > compute_obj_grasp_poseRequest;

typedef boost::shared_ptr< ::iri_wam_common_msgs::compute_obj_grasp_poseRequest> compute_obj_grasp_poseRequestPtr;
typedef boost::shared_ptr< ::iri_wam_common_msgs::compute_obj_grasp_poseRequest const> compute_obj_grasp_poseRequestConstPtr;


template <class ContainerAllocator>
struct compute_obj_grasp_poseResponse_ {
  typedef compute_obj_grasp_poseResponse_<ContainerAllocator> Type;

  compute_obj_grasp_poseResponse_()
  : graspPose()
  , wrinkleness(0.0)
  {
  }

  compute_obj_grasp_poseResponse_(const ContainerAllocator& _alloc)
  : graspPose(_alloc)
  , wrinkleness(0.0)
  {
  }

  typedef  ::geometry_msgs::PoseStamped_<ContainerAllocator>  _graspPose_type;
   ::geometry_msgs::PoseStamped_<ContainerAllocator>  graspPose;

  typedef float _wrinkleness_type;
  float wrinkleness;


  typedef boost::shared_ptr< ::iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct compute_obj_grasp_poseResponse
typedef  ::iri_wam_common_msgs::compute_obj_grasp_poseResponse_<std::allocator<void> > compute_obj_grasp_poseResponse;

typedef boost::shared_ptr< ::iri_wam_common_msgs::compute_obj_grasp_poseResponse> compute_obj_grasp_poseResponsePtr;
typedef boost::shared_ptr< ::iri_wam_common_msgs::compute_obj_grasp_poseResponse const> compute_obj_grasp_poseResponseConstPtr;

struct compute_obj_grasp_pose
{

typedef compute_obj_grasp_poseRequest Request;
typedef compute_obj_grasp_poseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct compute_obj_grasp_pose
} // namespace iri_wam_common_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f56ea92237ddf5f397772505f7991f2f";
  }

  static const char* value(const  ::iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xf56ea92237ddf5f3ULL;
  static const uint64_t static_value2 = 0x97772505f7991f2fULL;
};

template<class ContainerAllocator>
struct DataType< ::iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/compute_obj_grasp_poseRequest";
  }

  static const char* value(const  ::iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 filterID\n\
\n\
";
  }

  static const char* value(const  ::iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ecc3c30a068ed3128c7cff6196e11ce2";
  }

  static const char* value(const  ::iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xecc3c30a068ed312ULL;
  static const uint64_t static_value2 = 0x8c7cff6196e11ce2ULL;
};

template<class ContainerAllocator>
struct DataType< ::iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/compute_obj_grasp_poseResponse";
  }

  static const char* value(const  ::iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "geometry_msgs/PoseStamped graspPose\n\
float32 wrinkleness\n\
\n\
\n\
================================================================================\n\
MSG: geometry_msgs/PoseStamped\n\
# A Pose with reference coordinate frame and timestamp\n\
Header header\n\
Pose pose\n\
\n\
================================================================================\n\
MSG: std_msgs/Header\n\
# Standard metadata for higher-level stamped data types.\n\
# This is generally used to communicate timestamped data \n\
# in a particular coordinate frame.\n\
# \n\
# sequence ID: consecutively increasing ID \n\
uint32 seq\n\
#Two-integer timestamp that is expressed as:\n\
# * stamp.secs: seconds (stamp_secs) since epoch\n\
# * stamp.nsecs: nanoseconds since stamp_secs\n\
# time-handling sugar is provided by the client library\n\
time stamp\n\
#Frame this data is associated with\n\
# 0: no frame\n\
# 1: global frame\n\
string frame_id\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Pose\n\
# A representation of pose in free space, composed of postion and orientation. \n\
Point position\n\
Quaternion orientation\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Point\n\
# This contains the position of a point in free space\n\
float64 x\n\
float64 y\n\
float64 z\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Quaternion\n\
# This represents an orientation in free space in quaternion form.\n\
\n\
float64 x\n\
float64 y\n\
float64 z\n\
float64 w\n\
\n\
";
  }

  static const char* value(const  ::iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.filterID);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct compute_obj_grasp_poseRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.graspPose);
    stream.next(m.wrinkleness);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct compute_obj_grasp_poseResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<iri_wam_common_msgs::compute_obj_grasp_pose> {
  static const char* value() 
  {
    return "a4372bd3edc1254ae3d8c932f3655620";
  }

  static const char* value(const iri_wam_common_msgs::compute_obj_grasp_pose&) { return value(); } 
};

template<>
struct DataType<iri_wam_common_msgs::compute_obj_grasp_pose> {
  static const char* value() 
  {
    return "iri_wam_common_msgs/compute_obj_grasp_pose";
  }

  static const char* value(const iri_wam_common_msgs::compute_obj_grasp_pose&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a4372bd3edc1254ae3d8c932f3655620";
  }

  static const char* value(const iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/compute_obj_grasp_pose";
  }

  static const char* value(const iri_wam_common_msgs::compute_obj_grasp_poseRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a4372bd3edc1254ae3d8c932f3655620";
  }

  static const char* value(const iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/compute_obj_grasp_pose";
  }

  static const char* value(const iri_wam_common_msgs::compute_obj_grasp_poseResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // IRI_WAM_COMMON_MSGS_SERVICE_COMPUTE_OBJ_GRASP_POSE_H

