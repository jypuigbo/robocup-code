/* Auto-generated by genmsg_cpp for file /home/sampfeiffer/branches_svn/migration/ROBOCUP_STACKS_INTEGRATION/stacks/robocup_stacks/iri/iri_wam_common_msgs/srv/bhand_cmd.srv */
#ifndef IRI_WAM_COMMON_MSGS_SERVICE_BHAND_CMD_H
#define IRI_WAM_COMMON_MSGS_SERVICE_BHAND_CMD_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace iri_wam_common_msgs
{
template <class ContainerAllocator>
struct bhand_cmdRequest_ {
  typedef bhand_cmdRequest_<ContainerAllocator> Type;

  bhand_cmdRequest_()
  : bhandcmd()
  {
  }

  bhand_cmdRequest_(const ContainerAllocator& _alloc)
  : bhandcmd(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _bhandcmd_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  bhandcmd;


  typedef boost::shared_ptr< ::iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct bhand_cmdRequest
typedef  ::iri_wam_common_msgs::bhand_cmdRequest_<std::allocator<void> > bhand_cmdRequest;

typedef boost::shared_ptr< ::iri_wam_common_msgs::bhand_cmdRequest> bhand_cmdRequestPtr;
typedef boost::shared_ptr< ::iri_wam_common_msgs::bhand_cmdRequest const> bhand_cmdRequestConstPtr;


template <class ContainerAllocator>
struct bhand_cmdResponse_ {
  typedef bhand_cmdResponse_<ContainerAllocator> Type;

  bhand_cmdResponse_()
  : success(0)
  {
  }

  bhand_cmdResponse_(const ContainerAllocator& _alloc)
  : success(0)
  {
  }

  typedef int8_t _success_type;
  int8_t success;


  typedef boost::shared_ptr< ::iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct bhand_cmdResponse
typedef  ::iri_wam_common_msgs::bhand_cmdResponse_<std::allocator<void> > bhand_cmdResponse;

typedef boost::shared_ptr< ::iri_wam_common_msgs::bhand_cmdResponse> bhand_cmdResponsePtr;
typedef boost::shared_ptr< ::iri_wam_common_msgs::bhand_cmdResponse const> bhand_cmdResponseConstPtr;

struct bhand_cmd
{

typedef bhand_cmdRequest Request;
typedef bhand_cmdResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct bhand_cmd
} // namespace iri_wam_common_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "866aea2f48b9c90dfd46358e21f1cb1d";
  }

  static const char* value(const  ::iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x866aea2f48b9c90dULL;
  static const uint64_t static_value2 = 0xfd46358e21f1cb1dULL;
};

template<class ContainerAllocator>
struct DataType< ::iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/bhand_cmdRequest";
  }

  static const char* value(const  ::iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string bhandcmd\n\
\n\
";
  }

  static const char* value(const  ::iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "0b13460cb14006d3852674b4c614f25f";
  }

  static const char* value(const  ::iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x0b13460cb14006d3ULL;
  static const uint64_t static_value2 = 0x852674b4c614f25fULL;
};

template<class ContainerAllocator>
struct DataType< ::iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/bhand_cmdResponse";
  }

  static const char* value(const  ::iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int8 success\n\
\n\
\n\
";
  }

  static const char* value(const  ::iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.bhandcmd);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct bhand_cmdRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct bhand_cmdResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<iri_wam_common_msgs::bhand_cmd> {
  static const char* value() 
  {
    return "d0e06140c76220845bac05af0d04d346";
  }

  static const char* value(const iri_wam_common_msgs::bhand_cmd&) { return value(); } 
};

template<>
struct DataType<iri_wam_common_msgs::bhand_cmd> {
  static const char* value() 
  {
    return "iri_wam_common_msgs/bhand_cmd";
  }

  static const char* value(const iri_wam_common_msgs::bhand_cmd&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d0e06140c76220845bac05af0d04d346";
  }

  static const char* value(const iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/bhand_cmd";
  }

  static const char* value(const iri_wam_common_msgs::bhand_cmdRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d0e06140c76220845bac05af0d04d346";
  }

  static const char* value(const iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/bhand_cmd";
  }

  static const char* value(const iri_wam_common_msgs::bhand_cmdResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // IRI_WAM_COMMON_MSGS_SERVICE_BHAND_CMD_H

