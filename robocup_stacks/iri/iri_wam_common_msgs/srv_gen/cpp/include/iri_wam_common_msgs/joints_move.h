/* Auto-generated by genmsg_cpp for file /home/sampfeiffer/branches_svn/migration/ROBOCUP_STACKS_INTEGRATION/stacks/robocup_stacks/iri/iri_wam_common_msgs/srv/joints_move.srv */
#ifndef IRI_WAM_COMMON_MSGS_SERVICE_JOINTS_MOVE_H
#define IRI_WAM_COMMON_MSGS_SERVICE_JOINTS_MOVE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace iri_wam_common_msgs
{
template <class ContainerAllocator>
struct joints_moveRequest_ {
  typedef joints_moveRequest_<ContainerAllocator> Type;

  joints_moveRequest_()
  : joints()
  , velocities()
  , accelerations()
  {
  }

  joints_moveRequest_(const ContainerAllocator& _alloc)
  : joints(_alloc)
  , velocities(_alloc)
  , accelerations(_alloc)
  {
  }

  typedef std::vector<double, typename ContainerAllocator::template rebind<double>::other >  _joints_type;
  std::vector<double, typename ContainerAllocator::template rebind<double>::other >  joints;

  typedef std::vector<double, typename ContainerAllocator::template rebind<double>::other >  _velocities_type;
  std::vector<double, typename ContainerAllocator::template rebind<double>::other >  velocities;

  typedef std::vector<double, typename ContainerAllocator::template rebind<double>::other >  _accelerations_type;
  std::vector<double, typename ContainerAllocator::template rebind<double>::other >  accelerations;


  typedef boost::shared_ptr< ::iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct joints_moveRequest
typedef  ::iri_wam_common_msgs::joints_moveRequest_<std::allocator<void> > joints_moveRequest;

typedef boost::shared_ptr< ::iri_wam_common_msgs::joints_moveRequest> joints_moveRequestPtr;
typedef boost::shared_ptr< ::iri_wam_common_msgs::joints_moveRequest const> joints_moveRequestConstPtr;


template <class ContainerAllocator>
struct joints_moveResponse_ {
  typedef joints_moveResponse_<ContainerAllocator> Type;

  joints_moveResponse_()
  : success(0)
  {
  }

  joints_moveResponse_(const ContainerAllocator& _alloc)
  : success(0)
  {
  }

  typedef int8_t _success_type;
  int8_t success;


  typedef boost::shared_ptr< ::iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct joints_moveResponse
typedef  ::iri_wam_common_msgs::joints_moveResponse_<std::allocator<void> > joints_moveResponse;

typedef boost::shared_ptr< ::iri_wam_common_msgs::joints_moveResponse> joints_moveResponsePtr;
typedef boost::shared_ptr< ::iri_wam_common_msgs::joints_moveResponse const> joints_moveResponseConstPtr;

struct joints_move
{

typedef joints_moveRequest Request;
typedef joints_moveResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct joints_move
} // namespace iri_wam_common_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "485856931e4d0b6e6ab1fe9b3e695f65";
  }

  static const char* value(const  ::iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x485856931e4d0b6eULL;
  static const uint64_t static_value2 = 0x6ab1fe9b3e695f65ULL;
};

template<class ContainerAllocator>
struct DataType< ::iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/joints_moveRequest";
  }

  static const char* value(const  ::iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
float64[] joints\n\
\n\
\n\
\n\
\n\
\n\
float64[] velocities\n\
float64[] accelerations\n\
\n\
";
  }

  static const char* value(const  ::iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "0b13460cb14006d3852674b4c614f25f";
  }

  static const char* value(const  ::iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x0b13460cb14006d3ULL;
  static const uint64_t static_value2 = 0x852674b4c614f25fULL;
};

template<class ContainerAllocator>
struct DataType< ::iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/joints_moveResponse";
  }

  static const char* value(const  ::iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int8 success\n\
\n\
\n\
";
  }

  static const char* value(const  ::iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.joints);
    stream.next(m.velocities);
    stream.next(m.accelerations);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct joints_moveRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct joints_moveResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<iri_wam_common_msgs::joints_move> {
  static const char* value() 
  {
    return "6771f2ed5e81879f848f17f32a0fd19d";
  }

  static const char* value(const iri_wam_common_msgs::joints_move&) { return value(); } 
};

template<>
struct DataType<iri_wam_common_msgs::joints_move> {
  static const char* value() 
  {
    return "iri_wam_common_msgs/joints_move";
  }

  static const char* value(const iri_wam_common_msgs::joints_move&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6771f2ed5e81879f848f17f32a0fd19d";
  }

  static const char* value(const iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/joints_move";
  }

  static const char* value(const iri_wam_common_msgs::joints_moveRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6771f2ed5e81879f848f17f32a0fd19d";
  }

  static const char* value(const iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/joints_move";
  }

  static const char* value(const iri_wam_common_msgs::joints_moveResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // IRI_WAM_COMMON_MSGS_SERVICE_JOINTS_MOVE_H

