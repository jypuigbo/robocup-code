/* Auto-generated by genmsg_cpp for file /home/sampfeiffer/branches_svn/migration/ROBOCUP_STACKS_INTEGRATION/stacks/robocup_stacks/iri/iri_wam_common_msgs/srv/modeling.srv */
#ifndef IRI_WAM_COMMON_MSGS_SERVICE_MODELING_H
#define IRI_WAM_COMMON_MSGS_SERVICE_MODELING_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace iri_wam_common_msgs
{
template <class ContainerAllocator>
struct modelingRequest_ {
  typedef modelingRequest_<ContainerAllocator> Type;

  modelingRequest_()
  : stateFamily(0)
  {
  }

  modelingRequest_(const ContainerAllocator& _alloc)
  : stateFamily(0)
  {
  }

  typedef int32_t _stateFamily_type;
  int32_t stateFamily;


  typedef boost::shared_ptr< ::iri_wam_common_msgs::modelingRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::iri_wam_common_msgs::modelingRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct modelingRequest
typedef  ::iri_wam_common_msgs::modelingRequest_<std::allocator<void> > modelingRequest;

typedef boost::shared_ptr< ::iri_wam_common_msgs::modelingRequest> modelingRequestPtr;
typedef boost::shared_ptr< ::iri_wam_common_msgs::modelingRequest const> modelingRequestConstPtr;


template <class ContainerAllocator>
struct modelingResponse_ {
  typedef modelingResponse_<ContainerAllocator> Type;

  modelingResponse_()
  {
  }

  modelingResponse_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::iri_wam_common_msgs::modelingResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::iri_wam_common_msgs::modelingResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct modelingResponse
typedef  ::iri_wam_common_msgs::modelingResponse_<std::allocator<void> > modelingResponse;

typedef boost::shared_ptr< ::iri_wam_common_msgs::modelingResponse> modelingResponsePtr;
typedef boost::shared_ptr< ::iri_wam_common_msgs::modelingResponse const> modelingResponseConstPtr;

struct modeling
{

typedef modelingRequest Request;
typedef modelingResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct modeling
} // namespace iri_wam_common_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::modelingRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::modelingRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::iri_wam_common_msgs::modelingRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d5871fb07f6885288ee9a7b1038ab364";
  }

  static const char* value(const  ::iri_wam_common_msgs::modelingRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd5871fb07f688528ULL;
  static const uint64_t static_value2 = 0x8ee9a7b1038ab364ULL;
};

template<class ContainerAllocator>
struct DataType< ::iri_wam_common_msgs::modelingRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/modelingRequest";
  }

  static const char* value(const  ::iri_wam_common_msgs::modelingRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::iri_wam_common_msgs::modelingRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 stateFamily\n\
\n\
";
  }

  static const char* value(const  ::iri_wam_common_msgs::modelingRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::iri_wam_common_msgs::modelingRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::modelingResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::modelingResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::iri_wam_common_msgs::modelingResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::iri_wam_common_msgs::modelingResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::iri_wam_common_msgs::modelingResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/modelingResponse";
  }

  static const char* value(const  ::iri_wam_common_msgs::modelingResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::iri_wam_common_msgs::modelingResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
";
  }

  static const char* value(const  ::iri_wam_common_msgs::modelingResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::iri_wam_common_msgs::modelingResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::iri_wam_common_msgs::modelingRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.stateFamily);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct modelingRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::iri_wam_common_msgs::modelingResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct modelingResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<iri_wam_common_msgs::modeling> {
  static const char* value() 
  {
    return "d5871fb07f6885288ee9a7b1038ab364";
  }

  static const char* value(const iri_wam_common_msgs::modeling&) { return value(); } 
};

template<>
struct DataType<iri_wam_common_msgs::modeling> {
  static const char* value() 
  {
    return "iri_wam_common_msgs/modeling";
  }

  static const char* value(const iri_wam_common_msgs::modeling&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<iri_wam_common_msgs::modelingRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d5871fb07f6885288ee9a7b1038ab364";
  }

  static const char* value(const iri_wam_common_msgs::modelingRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<iri_wam_common_msgs::modelingRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/modeling";
  }

  static const char* value(const iri_wam_common_msgs::modelingRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<iri_wam_common_msgs::modelingResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d5871fb07f6885288ee9a7b1038ab364";
  }

  static const char* value(const iri_wam_common_msgs::modelingResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<iri_wam_common_msgs::modelingResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/modeling";
  }

  static const char* value(const iri_wam_common_msgs::modelingResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // IRI_WAM_COMMON_MSGS_SERVICE_MODELING_H

