/* Auto-generated by genmsg_cpp for file /home/sampfeiffer/branches_svn/migration/ROBOCUP_STACKS_INTEGRATION/stacks/robocup_stacks/iri/iri_wam_common_msgs/msg/LWPRTrajectoryReturningForceEstimationGoal.msg */
#ifndef IRI_WAM_COMMON_MSGS_MESSAGE_LWPRTRAJECTORYRETURNINGFORCEESTIMATIONGOAL_H
#define IRI_WAM_COMMON_MSGS_MESSAGE_LWPRTRAJECTORYRETURNINGFORCEESTIMATIONGOAL_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"


namespace iri_wam_common_msgs
{
template <class ContainerAllocator>
struct LWPRTrajectoryReturningForceEstimationGoal_ {
  typedef LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator> Type;

  LWPRTrajectoryReturningForceEstimationGoal_()
  : model_filename()
  , points_filename()
  {
  }

  LWPRTrajectoryReturningForceEstimationGoal_(const ContainerAllocator& _alloc)
  : model_filename(_alloc)
  , points_filename(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _model_filename_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  model_filename;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _points_filename_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  points_filename;


  typedef boost::shared_ptr< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct LWPRTrajectoryReturningForceEstimationGoal
typedef  ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<std::allocator<void> > LWPRTrajectoryReturningForceEstimationGoal;

typedef boost::shared_ptr< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal> LWPRTrajectoryReturningForceEstimationGoalPtr;
typedef boost::shared_ptr< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal const> LWPRTrajectoryReturningForceEstimationGoalConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace iri_wam_common_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e44cfc1d1aa91d88d46a6e81769b3050";
  }

  static const char* value(const  ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xe44cfc1d1aa91d88ULL;
  static const uint64_t static_value2 = 0xd46a6e81769b3050ULL;
};

template<class ContainerAllocator>
struct DataType< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/LWPRTrajectoryReturningForceEstimationGoal";
  }

  static const char* value(const  ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator> > {
  static const char* value() 
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
# goal\n\
string model_filename\n\
string points_filename\n\
\n\
";
  }

  static const char* value(const  ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.model_filename);
    stream.next(m.points_filename);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct LWPRTrajectoryReturningForceEstimationGoal_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationGoal_<ContainerAllocator> & v) 
  {
    s << indent << "model_filename: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.model_filename);
    s << indent << "points_filename: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.points_filename);
  }
};


} // namespace message_operations
} // namespace ros

#endif // IRI_WAM_COMMON_MSGS_MESSAGE_LWPRTRAJECTORYRETURNINGFORCEESTIMATIONGOAL_H

