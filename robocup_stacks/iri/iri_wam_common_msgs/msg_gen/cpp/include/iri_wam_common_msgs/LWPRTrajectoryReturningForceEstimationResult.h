/* Auto-generated by genmsg_cpp for file /home/sampfeiffer/branches_svn/migration/ROBOCUP_STACKS_INTEGRATION/stacks/robocup_stacks/iri/iri_wam_common_msgs/msg/LWPRTrajectoryReturningForceEstimationResult.msg */
#ifndef IRI_WAM_COMMON_MSGS_MESSAGE_LWPRTRAJECTORYRETURNINGFORCEESTIMATIONRESULT_H
#define IRI_WAM_COMMON_MSGS_MESSAGE_LWPRTRAJECTORYRETURNINGFORCEESTIMATIONRESULT_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"


namespace iri_wam_common_msgs
{
template <class ContainerAllocator>
struct LWPRTrajectoryReturningForceEstimationResult_ {
  typedef LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> Type;

  LWPRTrajectoryReturningForceEstimationResult_()
  : force(0.0)
  {
  }

  LWPRTrajectoryReturningForceEstimationResult_(const ContainerAllocator& _alloc)
  : force(0.0)
  {
  }

  typedef float _force_type;
  float force;


  typedef boost::shared_ptr< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct LWPRTrajectoryReturningForceEstimationResult
typedef  ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<std::allocator<void> > LWPRTrajectoryReturningForceEstimationResult;

typedef boost::shared_ptr< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult> LWPRTrajectoryReturningForceEstimationResultPtr;
typedef boost::shared_ptr< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult const> LWPRTrajectoryReturningForceEstimationResultConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace iri_wam_common_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "14325717affaa8b2646515cff2e01241";
  }

  static const char* value(const  ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x14325717affaa8b2ULL;
  static const uint64_t static_value2 = 0x646515cff2e01241ULL;
};

template<class ContainerAllocator>
struct DataType< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "iri_wam_common_msgs/LWPRTrajectoryReturningForceEstimationResult";
  }

  static const char* value(const  ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
# result\n\
float32 force\n\
\n\
";
  }

  static const char* value(const  ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.force);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct LWPRTrajectoryReturningForceEstimationResult_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::iri_wam_common_msgs::LWPRTrajectoryReturningForceEstimationResult_<ContainerAllocator> & v) 
  {
    s << indent << "force: ";
    Printer<float>::stream(s, indent + "  ", v.force);
  }
};


} // namespace message_operations
} // namespace ros

#endif // IRI_WAM_COMMON_MSGS_MESSAGE_LWPRTRAJECTORYRETURNINGFORCEESTIMATIONRESULT_H

