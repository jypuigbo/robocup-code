/* Auto-generated by genmsg_cpp for file /home/sampfeiffer/branches_svn/migration/ROBOCUP_STACKS_INTEGRATION/stacks/robocup_stacks/moped/pr_msgs/srv/GuardedMove.srv */
#ifndef PR_MSGS_SERVICE_GUARDEDMOVE_H
#define PR_MSGS_SERVICE_GUARDEDMOVE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"

#include "pr_msgs/Joints.h"



namespace pr_msgs
{
template <class ContainerAllocator>
struct GuardedMoveRequest_ {
  typedef GuardedMoveRequest_<ContainerAllocator> Type;

  GuardedMoveRequest_()
  : positions()
  {
  }

  GuardedMoveRequest_(const ContainerAllocator& _alloc)
  : positions(_alloc)
  {
  }

  typedef  ::pr_msgs::Joints_<ContainerAllocator>  _positions_type;
   ::pr_msgs::Joints_<ContainerAllocator>  positions;


  typedef boost::shared_ptr< ::pr_msgs::GuardedMoveRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::pr_msgs::GuardedMoveRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GuardedMoveRequest
typedef  ::pr_msgs::GuardedMoveRequest_<std::allocator<void> > GuardedMoveRequest;

typedef boost::shared_ptr< ::pr_msgs::GuardedMoveRequest> GuardedMoveRequestPtr;
typedef boost::shared_ptr< ::pr_msgs::GuardedMoveRequest const> GuardedMoveRequestConstPtr;


template <class ContainerAllocator>
struct GuardedMoveResponse_ {
  typedef GuardedMoveResponse_<ContainerAllocator> Type;

  GuardedMoveResponse_()
  : ok(false)
  {
  }

  GuardedMoveResponse_(const ContainerAllocator& _alloc)
  : ok(false)
  {
  }

  typedef uint8_t _ok_type;
  uint8_t ok;


  typedef boost::shared_ptr< ::pr_msgs::GuardedMoveResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::pr_msgs::GuardedMoveResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GuardedMoveResponse
typedef  ::pr_msgs::GuardedMoveResponse_<std::allocator<void> > GuardedMoveResponse;

typedef boost::shared_ptr< ::pr_msgs::GuardedMoveResponse> GuardedMoveResponsePtr;
typedef boost::shared_ptr< ::pr_msgs::GuardedMoveResponse const> GuardedMoveResponseConstPtr;

struct GuardedMove
{

typedef GuardedMoveRequest Request;
typedef GuardedMoveResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct GuardedMove
} // namespace pr_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::pr_msgs::GuardedMoveRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::pr_msgs::GuardedMoveRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::pr_msgs::GuardedMoveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "652ae8faea68fe21ca4074dd9f25e569";
  }

  static const char* value(const  ::pr_msgs::GuardedMoveRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x652ae8faea68fe21ULL;
  static const uint64_t static_value2 = 0xca4074dd9f25e569ULL;
};

template<class ContainerAllocator>
struct DataType< ::pr_msgs::GuardedMoveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "pr_msgs/GuardedMoveRequest";
  }

  static const char* value(const  ::pr_msgs::GuardedMoveRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::pr_msgs::GuardedMoveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "pr_msgs/Joints positions\n\
\n\
================================================================================\n\
MSG: pr_msgs/Joints\n\
float64[] j\n\
\n\
";
  }

  static const char* value(const  ::pr_msgs::GuardedMoveRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::pr_msgs::GuardedMoveResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::pr_msgs::GuardedMoveResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::pr_msgs::GuardedMoveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6f6da3883749771fac40d6deb24a8c02";
  }

  static const char* value(const  ::pr_msgs::GuardedMoveResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x6f6da3883749771fULL;
  static const uint64_t static_value2 = 0xac40d6deb24a8c02ULL;
};

template<class ContainerAllocator>
struct DataType< ::pr_msgs::GuardedMoveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "pr_msgs/GuardedMoveResponse";
  }

  static const char* value(const  ::pr_msgs::GuardedMoveResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::pr_msgs::GuardedMoveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool ok\n\
\n\
";
  }

  static const char* value(const  ::pr_msgs::GuardedMoveResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::pr_msgs::GuardedMoveResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::pr_msgs::GuardedMoveRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.positions);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GuardedMoveRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::pr_msgs::GuardedMoveResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.ok);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GuardedMoveResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<pr_msgs::GuardedMove> {
  static const char* value() 
  {
    return "4083b8b868daf15fc9fc8191fdaeff6e";
  }

  static const char* value(const pr_msgs::GuardedMove&) { return value(); } 
};

template<>
struct DataType<pr_msgs::GuardedMove> {
  static const char* value() 
  {
    return "pr_msgs/GuardedMove";
  }

  static const char* value(const pr_msgs::GuardedMove&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<pr_msgs::GuardedMoveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4083b8b868daf15fc9fc8191fdaeff6e";
  }

  static const char* value(const pr_msgs::GuardedMoveRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<pr_msgs::GuardedMoveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "pr_msgs/GuardedMove";
  }

  static const char* value(const pr_msgs::GuardedMoveRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<pr_msgs::GuardedMoveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4083b8b868daf15fc9fc8191fdaeff6e";
  }

  static const char* value(const pr_msgs::GuardedMoveResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<pr_msgs::GuardedMoveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "pr_msgs/GuardedMove";
  }

  static const char* value(const pr_msgs::GuardedMoveResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // PR_MSGS_SERVICE_GUARDEDMOVE_H

